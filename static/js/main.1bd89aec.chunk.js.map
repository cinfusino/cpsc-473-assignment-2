{"version":3,"sources":["components/Search.js","components/StudentsFound.js","components/GradeTable.js","App.js","serviceWorker.js","index.js","data.js"],"names":["Search","val","this","myValue","value","props","filterUpdate","_this","react_default","a","createElement","type","ref","placeholder","onChange","bind","Component","StudentsFound","_ref","data","filterText","selectStudent","studentList","map","student","toLowerCase","lastName","key","id","className","onClick","firstName","GradeTable","selectedStudent","courseList","index","parseInt","length","courses","course","subject","grade","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","setState","console","log","components_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1bd89aec.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Search extends Component {\n\n  filterUpdate() {\n    const val = this.myValue.value;\n    this.props.filterUpdate(val)\n  }\n\n  render() {\n    //console.log('filterText value', this.props.filterText)\n    return (\n      <form>\n        <input\n        type=\"text\"\n        ref={ (value) => this.myValue = value}\n        placeholder=\"Enter last name\"\n        onChange={this.filterUpdate.bind(this)}\n        />\n      </form>\n    )\n  }\n}\n\nexport default Search;\n","import React from 'react';\n\nexport default ({ data, filterText, selectStudent }) => {\n    const studentList = data.map(student => {\n      if (filterText.toLowerCase() === student.lastName.toLowerCase()) {\n        return (\n          <li\n            key={student.id}\n            className=\"students-found-li\"\n            onClick={() => selectStudent(student.id)}\n          >\n            {student.firstName} {student.lastName}\n          </li>\n        )\n      }\n      return null\n    })\n\n    //<p>filterText value is: {this.props.filterText} </p> PLACE THIS AFTER FIRST <div> IN RETURN() TO SEE\n    return (\n      <div>\n        <p className=\"title\"><strong> Students Found: </strong></p>\n        <ul>\n          {studentList}\n        </ul>\n      </div>\n    );\n}\n","import React from 'react'\n\nexport default ({data, selectedStudent}) => {\n      let courseList = <tr key=\"0\"></tr>\n      const index = parseInt(selectedStudent)\n      let student = {firstName:\"\", lastName:\"\"}\n      if (index <= data.length) {\n      student = data[index];\n      courseList = student.courses.map(course =>{\n        return(\n          <tr key={course.id}>\n            <td>{course.subject}</td>\n            <td>{course.grade}</td>\n          </tr>\n        )\n      })\n    }\n\n    return(\n      <div>\n        <p className=\"title\"><strong> Grades for {student.firstName} {student.lastName}:</strong></p>\n        <table>\n          <tbody>\n            <tr>\n              <th>Course</th>\n              <th>Grade</th>\n            </tr>\n            {courseList}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n","import React, { Component } from 'react';\nimport Search from './components/Search';\nimport StudentsFound from './components/StudentsFound';\nimport GradeTable from './components/GradeTable'\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n      super(props)\n      this.state = {\n          filterText: '',\n          selectedStudent:''\n      }\n    }\n\n    filterUpdate(value) {\n      this.setState({\n        filterText: value\n      });\n    }\n\n    selectStudent(id) {\n      console.log(id)\n      this.setState({\n        selectedStudent: id\n      })\n    }\n\n\n  render() {\n    //console.log('filterText state from parent component', this.state.filterText)\n    return(\n      <div className=\"outter-box\">\n        <div className=\"top-box\">\n          <Search\n          filterText={this.state.filterText}\n          filterUpdate={this.filterUpdate.bind(this)}\n          />\n        </div>\n\n        <div className=\"bottom-box\">\n\n          <div className=\"bottom-left-box\">\n            <StudentsFound\n            data={this.props.data}\n            filterText={this.state.filterText}\n            selectStudent={this.selectStudent.bind(this)}\n            />\n          </div>\n\n\n          <div className=\"bottom-right-box\">\n            <GradeTable\n              data={this.props.data}\n              selectedStudent={this.state.selectedStudent}\n            />\n          </div>\n\n\n        </div>\n      </div>\n    )\n  }\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport data from './data';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App data={data} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export default [\n  {\n    id: 0,\n    firstName: 'Carmine',\n    lastName: 'Infusino',\n    courses: [\n      {\n        id:0,\n        subject: 'Theory of Computation',\n        grade: 'A'\n      },\n      {\n        id:1,\n        subject: 'Software Design',\n        grade: 'A'\n      },\n      {\n        id:3,\n        subject: 'Software Testing',\n        grade: 'A'\n      },\n      {\n        id:4,\n        subject: 'Web Programming and Data Management',\n        grade: 'A'\n      }\n    ]\n  },\n  {\n    id: 1,\n    firstName: 'Daniel',\n    lastName: 'Domingo',\n    courses: [\n      {\n        id:0,\n        subject: 'Web Programming and Data Management',\n        grade: 'A'\n      },\n      {\n        id:1,\n        subject: 'Game Programming',\n        grade: 'B'\n      },\n      {\n        id:2,\n        subject: 'Philosophy',\n        grade: 'A'\n      }\n    ]\n  },\n  {\n    id: 2,\n    firstName: 'Jared',\n    lastName: 'Fipps',\n    courses: [\n      {\n        id:0,\n        subject: 'Web Programming and Data Management',\n        grade: 'A'\n      },\n      {\n        id:1,\n        subject: 'Mobile Application Development',\n        grade: 'B'\n      },\n      {\n        id:2,\n        subject: 'Artificial Intelligence',\n        grade: 'A'\n      }\n    ]\n  },\n  {\n    id: 3,\n    firstName: 'Carl',\n    lastName: 'Fipps',\n    courses: [\n      {\n        id:0,\n        subject: 'Math',\n        grade: 'D'\n      },\n      {\n        id:1,\n        subject: 'English',\n        grade: 'A'\n      },\n      {\n        id:2,\n        subject: 'Science',\n        grade: 'D'\n      }\n    ]\n  },\n  {\n    id: 4,\n    firstName: 'Jillian',\n    lastName: 'Infusino',\n    courses: [\n      {\n        id:0,\n        subject: 'Health Science',\n        grade: 'A'\n      },\n      {\n        id:1,\n        subject: 'Biology',\n        grade: 'A'\n      },\n      {\n        id:2,\n        subject: 'Medical',\n        grade: 'A'\n      }\n    ]\n  }\n]\n"],"sourceRoot":""}